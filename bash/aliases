# Bash alias to open Github page for project in current working directory.
# Will use the current active branch if it exists remotely, or falls back to master.
alias github='br=$(git branch --contains HEAD | sed -En "s/^\* //p"); if ! git ls-remote . | grep -q -e "refs/remotes/.*/${br}"; then br="master"; fi; open $(git config -l | sed -En "s%remote.origin.url=git(@|://)(github.com)(:|/)(.+/.+).git%https://\2/\4/tree/${br}%p")'

# set alias for vi, only if no alias is already set
alias vi >/dev/null 2>&1 || alias vi=vim

# set alias for ack, if ack-grep exist and no alias is already set
type -P ack-grep >/dev/null 2>&1 && { alias ack >/dev/null 2>&1 || alias ack=ack-grep; }

# misc
alias reload='. ~/.bash_profile'
alias profileme="history | awk '{print \$2}' | awk 'BEGIN{FS=\"|\"}{print \$1}' | sort | uniq -c | sort -n | tail -n 20 | sort -nr"

speed_ssh() { if [ -z "$1" ];then echo 'Vous devez specifier le nom du serveur distant'; else yes | pv | ssh "$1" "cat >/dev/null"; fi }
typeset -f _ssh >/dev/null && shopt -u hostcomplete && complete -F _ssh speed_ssh

#####
# GIT
# ###

# Idiot-Proof Git Aliases (see http://notes.envato.com/developers/rebasing-merge-commits-in-git/)
function git_current_branch() {
  git rev-parse --abbrev-ref HEAD 2>/dev/null
}

alias gpthis='git push origin HEAD:$(git_current_branch)'
alias grb='git rebase -p'
alias gup='git fetch origin && grb origin/$(git_current_branch)'
alias gm='git merge --no-ff'

# Local Variables:      #
# mode: ksh             #
# tab-width: 4          #
# indent-tabs-mode: nil #
# End:                  #
#
# vi: set expandtab ts=4 sw=4 sts=4: #
