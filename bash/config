#!/bin/bash

# A basically sane bash environment.

####################
# Specific OS config
####################
# Turn case-insensitive matching temporarily on, if necessary.
nocasematchWasOff=0
shopt nocasematch >/dev/null || nocasematchWasOff=1
(( nocasematchWasOff )) && shopt -s nocasematch

configOS=''
case "${OSTYPE}" in
    linux*)  configOS='linux' ;;
esac

# Restore state of 'nocasematch' option, if necessary.
(( nocasematchWasOff )) && shopt -u nocasematch
unset nocasematchWasOff

[[ -n "$configOS" && -f ~/.bash/config.$configOS ]] && source ~/.bash/config.$configOS
unset configOS

##########
# Color
##########
if [ -z "$LS_COLORS" ];then
    DIRCOLORS_BIN=$(type -P dircolors gdircolors | head -1)
    if [ -n "$DIRCOLORS_BIN" ];then
        test -r ~/.dircolors && eval "$($DIRCOLORS_BIN -b ~/.dircolors)" || eval "$($DIRCOLORS_BIN -b)"
    fi
fi

if [ -n "$LS_COLORS" ];then
    # LS
    alias ll='ls -alF --color=auto'
    alias ls='ls --color=auto'

    # TREE
    HAVE_TREE=$(type -P tree)
    [[ -n "$HAVE_TREE" ]] && alias tree='tree -C'
fi

export GREP_COLOR='3;32'
export GREP_OPTIONS='--color=auto'

##########
# History
##########
HISTFILESIZE=100000
HISTSIZE=10000
# don't put duplicate lines in the history. See bash(1) for more options
export HISTCONTROL=ignoreboth:erasedups

# append to the history file, don't overwrite it
shopt -s histappend
# save history file after each command
case $PROMPT_COMMAND in
    *history\ -a*)
       ;;
    *) PROMPT_COMMAND="${PROMPT_COMMAND+$PROMPT_COMMAND ; }history -a"
       ;;
esac

##########
# Misc
##########
HAVE_VIM=$(type -P vim)
[[ -n "$HAVE_VIM" ]] && export EDITOR=vim
HAVE_LESS=$(type -P less)
if [[ -n "$HAVE_LESS" ]];then
    export LESS='-FiRX'
    PAGER='less -FiRX'
    MANPAGER='less -FiRsX'
else
	PAGER=more
	MANPAGER="$PAGER"
fi
export PAGER MANPAGER

# lesspipe.sh & code2color
LESSPIPESH_BIN=$(type -P lesspipe.sh)
if [[ -n $(type -P code2color) && -n "$LESSPIPESH_BIN" ]];then
    export LESSOPEN="|$LESSPIPESH_BIN %s"
fi

# Ack
ACK_PAGER="$PAGER"
ACK_PAGER_COLOR="$PAGER"

##########
# Autojump
##########

for autojump_dir in "$DOTFILES_DIR/autojump" "$DOTFILES_DIR/autojump/bin";do
    if [[ -f "$autojump_dir/autojump.bash" ]];then
        [[ -z "$AUTOJUMP_IGNORE_CASE" ]]   && export AUTOJUMP_IGNORE_CASE=1
        [[ -z "$AUTOJUMP_KEEP_SYMLINKS" ]] && export AUTOJUMP_KEEP_SYMLINKS=1
        source "$autojump_dir/autojump.bash"
        export AUTOJUMP_PYTHON_BIN=$(type -P python2.7 python2.6 python | head -1)
        export AUTOJUMP_BIN="$autojump_dir/autojump"
        break
    fi
done
if [[ -n "$AUTOJUMP_BIN" && -n "$AUTOJUMP_PYTHON_BIN" ]]; then
function autojump() {
    /usr/bin/env "${AUTOJUMP_PYTHON_BIN}" "${AUTOJUMP_BIN}" $@
}
fi
unset autojump_dir

##############
# todo.txt-cli
##############
if [[ -d "$HOME/.todo" && -f "$HOME/.todo.cfg" ]];then
     export TODOTXT_CFG_FILE="$HOME/.todo.cfg"
     alias t='todo.sh'
     complete -F _todo t
fi

######
# xssh
######
if [[ -f "$HOME/.xssh_rc" ]];then
    source "$DOTFILES_DIR/xssh/xssh.sh"
    alias ssh >/dev/null 2>&1 || alias ssh=xssh
fi


############
# pastebinit
############
# Check if we have the configobj python module
"$DOTFILES_DIR/bin/test-python-import.py" configobj >/dev/null
if [[ $? -ne 0 ]]; then
    # Add configobj library to $PYTHONPATH
    case $PYTHONPATH in
        *configobj*) ;;
        *) export PYTHONPATH="${PYTHONPATH:+$PYTHONPATH:}$DOTFILES_DIR/libraries/configobj-4.7.2"
    esac
fi

########
# Cheat
########
export CHEATCOLORS=true
# Check if we have the argparse python module
"$DOTFILES_DIR/bin/test-python-import.py" argparse >/dev/null
if [[ $? -ne 0 ]]; then
    # Add argparse library to $PYTHONPATH
    case $PYTHONPATH in
        *argparse*) ;;
        *) export PYTHONPATH="${PYTHONPATH:+$PYTHONPATH:}$DOTFILES_DIR/libraries/argparse-1.2"
    esac
fi

#########
# PROMPT
#########
#  Don't set PS1 for remote emacs, want full when running inside emacs
if [[ ! -z "$TERM" && ("$TERM" != "dumb" || ! -z "$INSIDE_EMACS") ]]; then
    source $DOTFILES_DIR/bash/prompt
fi

# Local Variables:      #
# mode: ksh             #
# tab-width: 4          #
# indent-tabs-mode: nil #
# End:                  #
#
# vi: set expandtab ts=4 sw=4 sts=4: #
